@using Sitecore.Feature.Blocks
@using Sitecore.Feature.Blocks.Models
@using Sitecore.Foundation.Alerts.Extensions
@using Sitecore.Foundation.Models.Extensions
@using Glass.Mapper.Sc.Web.Mvc

@inherits GlassView<IHeroBanner>

@if (!Model.IsDerived(Templates.HeroBanner.ID))
{
    @Html.ShowRenderingAlert(nameof(Templates.HeroBanner))
    return;
}

@if (Sitecore.Context.PageMode.IsExperienceEditor)
{
    <fieldset>
        <legend><strong>Hero banner details</strong></legend>

        <p>This section will not be output on the public site, it is only available for content editors to edit parts of this control.</p>

        @using (Html.Glass().BeginEditFrame(Model, "Edit Video", model => model.Video))
        {
            <text>Edit video</text>
        }

        @using (Html.Glass().BeginEditFrame(Model, "Edit Image", model => model.Image))
        {
            <text>Edit image</text>
        }

        @using (Html.Glass().BeginEditFrame(Model, "Edit Primary Action", model => model.PrimaryAction))
        {
            <text>Edit Primary Action</text>
        }

        @using (Html.Glass().BeginEditFrame(Model, "Edit Secondary Action", model => model.SecondaryAction))
        {
            <text>Edit Secondary Action</text>
        }
    </fieldset>
}

<header class="hero">
    @if (!string.IsNullOrEmpty(Model.Title) || Sitecore.Context.PageMode.IsExperienceEditor)
    {
        <h1 class="hero__title">@Editable(model => model.Title)</h1>
    }
    @if (!string.IsNullOrEmpty(Model.Subtitle) || Sitecore.Context.PageMode.IsExperienceEditor)
    {
        <p class="hero__sub">@Editable(model => model.Subtitle)</p>
    }
    @if (Model.Video != null)
    {
        <div class="hero__video-link">
            <a href="@Model.Video.Url">
                <i class="icon-play "></i>
            </a>
        </div>
    }
	<div class="hero__ctas">
        @if (Model.PrimaryAction != null)
        {
		    <a href="@Model.PrimaryAction.Url" class="button " id="">
                <span class="button__text">@Model.PrimaryAction.Text</span>
            </a>
        }
        @if (Model.SecondaryAction != null)
        {
		    <a href="@Model.SecondaryAction.Url" class="button " id="">
                <span class="button__text">@Model.SecondaryAction.Text</span>
            </a>
        }
	</div>
    @if (Model.Image != null)
    {
        <div class="hero__cover">
            <img src="@Model.Image.Src" class="hero__image" srcset="@Model.Image.Src?w=1000 1000w,@Model.Image.Src?w=1800 1800w,@Model.Image.Src?w=2800 2800w" alt="@Model.Image.Alt" />
        </div>
    }
</header>
